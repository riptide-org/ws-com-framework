syntax = "proto3";
package events;

message FspComm {
    /*
    * Request for a file or metadata upload to the provided location
    */
    message UploadTo {
        uint32 file_id = 1;
        string upload_url = 2;
    }

    /*
    * Request for a file or metadata upload to the provided location
    */
    message MetadataReq {
        uint32 file_id = 1;
        uint64 upload_id = 2;
    }

    /*
    * Metadata response from a node to the requester
    */
    message MetadataRes {
        // The unique file_id of this file
        uint32 file_id = 1;
        // When this file share expires (seconds since epoch)
        uint64 exp = 2;
        // When this file was created (seconds since epoch)
        uint64 crt = 3;
        // The size of this file in bytes
        uint64 file_size = 4;
        // The name of the user sharing the file
        string username = 5;
        // The name of the file being share
        string file_name = 6;
        // The upload id provided by the server
        uint64 upload_id = 7;
    }

    /*
    * An authentication challenge
    */
    message AuthReq {
        uint64 public_id = 1;
    }

    /*
    * An authentication response to an auth challenge, containing the expected public_id
    * and passcode.
    */
    message Auth {
        uint64 public_id = 1;
        bytes passcode = 2;
    }

    /*
    * A request for the status of this agent
    */
    message StatusReq {
        uint64 public_id = 1;
    }

    /*
    * A response containing information about the status of this agent
    */
    message StatusRes {
        uint64 public_id = 1;
        bool ready = 2;
        uint64 uptime = 4;
        optional string message = 3;
    }

    /*
    * An error has occured
    */
    message Error {
        enum ErrorType {
            /// Other Error, reason should be populated
            UNKNOWN = 0;
            /// Previously requested upload failed
            FILE_FAILED_UPLOAD = 1;
            /// Requested file does not exist
            FILE_DOESNT_EXIST = 2;
            /// You should have authenticated before making this request
            INVALID_SESSION = 3;
        }
        /// The type of error being sent
        Type type = 1;

        /// An optional reason for the error.
        optional string reason = 3;
    }

    enum Type {
        OK = 0;
        ERROR = 1;
        UPLOAD_TO = 2;
        METADATA_REQ = 3;
        METADATA_RES = 4;
        AUTHREQ = 5;
        AUTH = 6;
        STATUS_REQ = 7;
        STATUS_RES = 8;
    }

    Type type = 1;
    bytes value = 2;
}
